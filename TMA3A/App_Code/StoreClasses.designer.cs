#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="StoreDB")]
public partial class StoreClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertUserInfo(UserInfo instance);
  partial void UpdateUserInfo(UserInfo instance);
  partial void DeleteUserInfo(UserInfo instance);
  partial void InsertOrderInfo(OrderInfo instance);
  partial void UpdateOrderInfo(OrderInfo instance);
  partial void DeleteOrderInfo(OrderInfo instance);
  #endregion
	
	public StoreClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["StoreDBConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public StoreClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public StoreClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public StoreClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public StoreClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<UserInfo> UserInfos
	{
		get
		{
			return this.GetTable<UserInfo>();
		}
	}
	
	public System.Data.Linq.Table<OrderInfo> OrderInfos
	{
		get
		{
			return this.GetTable<OrderInfo>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserInfo")]
public partial class UserInfo : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _UserID;
	
	private string _Username;
	
	private string _Password;
	
	private string _Email;
	
	private string _Address;
	
	private string _fname;
	
	private string _lname;
	
	private EntitySet<OrderInfo> _OrderInfos;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnfnameChanging(string value);
    partial void OnfnameChanged();
    partial void OnlnameChanging(string value);
    partial void OnlnameChanged();
    #endregion
	
	public UserInfo()
	{
		this._OrderInfos = new EntitySet<OrderInfo>(new Action<OrderInfo>(this.attach_OrderInfos), new Action<OrderInfo>(this.detach_OrderInfos));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NChar(25)")]
	public string Username
	{
		get
		{
			return this._Username;
		}
		set
		{
			if ((this._Username != value))
			{
				this.OnUsernameChanging(value);
				this.SendPropertyChanging();
				this._Username = value;
				this.SendPropertyChanged("Username");
				this.OnUsernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NChar(25)")]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NChar(100)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NChar(100)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="NChar(25)")]
	public string fname
	{
		get
		{
			return this._fname;
		}
		set
		{
			if ((this._fname != value))
			{
				this.OnfnameChanging(value);
				this.SendPropertyChanging();
				this._fname = value;
				this.SendPropertyChanged("fname");
				this.OnfnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lname", DbType="NChar(25)")]
	public string lname
	{
		get
		{
			return this._lname;
		}
		set
		{
			if ((this._lname != value))
			{
				this.OnlnameChanging(value);
				this.SendPropertyChanging();
				this._lname = value;
				this.SendPropertyChanged("lname");
				this.OnlnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_OrderInfo", Storage="_OrderInfos", ThisKey="UserID", OtherKey="UserID")]
	public EntitySet<OrderInfo> OrderInfos
	{
		get
		{
			return this._OrderInfos;
		}
		set
		{
			this._OrderInfos.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_OrderInfos(OrderInfo entity)
	{
		this.SendPropertyChanging();
		entity.UserInfo = this;
	}
	
	private void detach_OrderInfos(OrderInfo entity)
	{
		this.SendPropertyChanging();
		entity.UserInfo = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderInfo")]
public partial class OrderInfo : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _OrderId;
	
	private int _UserID;
	
	private string _CPU;
	
	private string _Mobo;
	
	private string _Memory;
	
	private string _Storage;
	
	private string _VideoC;
	
	private string _Case;
	
	private string _OS;
	
	private string _PSU;
	
	private System.Nullable<int> _tPrice;
	
	private EntityRef<UserInfo> _UserInfo;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnCPUChanging(string value);
    partial void OnCPUChanged();
    partial void OnMoboChanging(string value);
    partial void OnMoboChanged();
    partial void OnMemoryChanging(string value);
    partial void OnMemoryChanged();
    partial void OnStorageChanging(string value);
    partial void OnStorageChanged();
    partial void OnVideoCChanging(string value);
    partial void OnVideoCChanged();
    partial void OnCaseChanging(string value);
    partial void OnCaseChanged();
    partial void OnOSChanging(string value);
    partial void OnOSChanged();
    partial void OnPSUChanging(string value);
    partial void OnPSUChanged();
    partial void OntPriceChanging(System.Nullable<int> value);
    partial void OntPriceChanged();
    #endregion
	
	public OrderInfo()
	{
		this._UserInfo = default(EntityRef<UserInfo>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int OrderId
	{
		get
		{
			return this._OrderId;
		}
		set
		{
			if ((this._OrderId != value))
			{
				this.OnOrderIdChanging(value);
				this.SendPropertyChanging();
				this._OrderId = value;
				this.SendPropertyChanged("OrderId");
				this.OnOrderIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
	public int UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				if (this._UserInfo.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPU", DbType="NChar(100)")]
	public string CPU
	{
		get
		{
			return this._CPU;
		}
		set
		{
			if ((this._CPU != value))
			{
				this.OnCPUChanging(value);
				this.SendPropertyChanging();
				this._CPU = value;
				this.SendPropertyChanged("CPU");
				this.OnCPUChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobo", DbType="NChar(100)")]
	public string Mobo
	{
		get
		{
			return this._Mobo;
		}
		set
		{
			if ((this._Mobo != value))
			{
				this.OnMoboChanging(value);
				this.SendPropertyChanging();
				this._Mobo = value;
				this.SendPropertyChanged("Mobo");
				this.OnMoboChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memory", DbType="NChar(500)")]
	public string Memory
	{
		get
		{
			return this._Memory;
		}
		set
		{
			if ((this._Memory != value))
			{
				this.OnMemoryChanging(value);
				this.SendPropertyChanging();
				this._Memory = value;
				this.SendPropertyChanged("Memory");
				this.OnMemoryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Storage", DbType="NChar(500)")]
	public string Storage
	{
		get
		{
			return this._Storage;
		}
		set
		{
			if ((this._Storage != value))
			{
				this.OnStorageChanging(value);
				this.SendPropertyChanging();
				this._Storage = value;
				this.SendPropertyChanged("Storage");
				this.OnStorageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoC", DbType="NChar(100)")]
	public string VideoC
	{
		get
		{
			return this._VideoC;
		}
		set
		{
			if ((this._VideoC != value))
			{
				this.OnVideoCChanging(value);
				this.SendPropertyChanging();
				this._VideoC = value;
				this.SendPropertyChanged("VideoC");
				this.OnVideoCChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Case]", Storage="_Case", DbType="NChar(200)")]
	public string Case
	{
		get
		{
			return this._Case;
		}
		set
		{
			if ((this._Case != value))
			{
				this.OnCaseChanging(value);
				this.SendPropertyChanging();
				this._Case = value;
				this.SendPropertyChanged("Case");
				this.OnCaseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OS", DbType="NChar(100)")]
	public string OS
	{
		get
		{
			return this._OS;
		}
		set
		{
			if ((this._OS != value))
			{
				this.OnOSChanging(value);
				this.SendPropertyChanging();
				this._OS = value;
				this.SendPropertyChanged("OS");
				this.OnOSChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PSU", DbType="NChar(200)")]
	public string PSU
	{
		get
		{
			return this._PSU;
		}
		set
		{
			if ((this._PSU != value))
			{
				this.OnPSUChanging(value);
				this.SendPropertyChanging();
				this._PSU = value;
				this.SendPropertyChanged("PSU");
				this.OnPSUChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tPrice", DbType="Int")]
	public System.Nullable<int> tPrice
	{
		get
		{
			return this._tPrice;
		}
		set
		{
			if ((this._tPrice != value))
			{
				this.OntPriceChanging(value);
				this.SendPropertyChanging();
				this._tPrice = value;
				this.SendPropertyChanged("tPrice");
				this.OntPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_OrderInfo", Storage="_UserInfo", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
	public UserInfo UserInfo
	{
		get
		{
			return this._UserInfo.Entity;
		}
		set
		{
			UserInfo previousValue = this._UserInfo.Entity;
			if (((previousValue != value) 
						|| (this._UserInfo.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserInfo.Entity = null;
					previousValue.OrderInfos.Remove(this);
				}
				this._UserInfo.Entity = value;
				if ((value != null))
				{
					value.OrderInfos.Add(this);
					this._UserID = value.UserID;
				}
				else
				{
					this._UserID = default(int);
				}
				this.SendPropertyChanged("UserInfo");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
